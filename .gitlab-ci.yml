image: docker:latest

stages:
- download
- deploy

download_cgmlst:
  image: node:8
  stage: download
  cache:
    key: node
    paths:
    - node_modules/
  variables:
    ftp_proxy: $https_proxy
    RUN_CORE_GENOME_MLST: "yes"
  script:
  - mkdir -p /opt
  - ln -s $(pwd)/data /opt/mlst
  - yarn install
  - if [[ -f /nfs/wgsa/gitlab-cache/cgps-mlst/latest.tgz ]]; then tar -xzf /nfs/wgsa/gitlab-cache/cgps-mlst/latest.tgz && echo "[$(date)] Used cache"; else echo "[$(date)] No cache found"; fi
  - ls -l /nfs/wgsa/gitlab-cache/cgps-mlst/latest.tgz
  - DEBUG="*,-follow-redirects" npm run download
  only:
  - tags
  artifacts:
    paths:
    - data/cache/
    expire_in: 60 minutes

deploy_cgmlst:
  stage: deploy
  script:
  - docker pull ubuntu:latest
  - docker pull node:8
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - docker build
    --build-arg http_proxy=$http_proxy
    --build-arg https_proxy=$https_proxy
    --build-arg ftp_proxy=$https_proxy
    --build-arg RUN_CORE_GENOME_MLST=yes
    -t "$CI_REGISTRY_IMAGE:cgmlst-$CI_COMMIT_REF_NAME" .
  - docker push "$CI_REGISTRY_IMAGE:cgmlst-$CI_COMMIT_REF_NAME"
  only:
  - tags
  - schedules
