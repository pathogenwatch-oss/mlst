cache:
  paths:
    - cgps-typing-databases/
    - node_modules/

stages:
  - quick-index
  - quick-test
  - index
  - test
  - deploy

quick index:
  stage: quick-index
  image: node:10
  except:
    - web
  artifacts:
    paths:
    - index_dir/
    expire_in: 2 days
  script:
    - rm -r index_dir && echo "Delete old index" || echo "No old index"
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
    - ./bin/pull_database.sh cgps-typing-databases
    - yarn install
    - DEBUG='cgps:info' npm run index -- --scheme=saureus_1 --max-sequences 50 --index=index_dir --database=cgps-typing-databases
    - DEBUG='cgps:info' npm run index -- --scheme=neisseria --index=index_dir --database=cgps-typing-databases

quick test:
  stage: quick-test
  image: docker:latest
  except:
    - web
  script:
    - docker build
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --target test_build
      -t "$CI_REGISTRY_IMAGE:mlst-test" .
    - tar c *.json *.js src tests index_dir | docker run -i --rm
      -v /usr/local/mlst/node_modules
      -v $(pwd):/usr/local/mlst
      -w /usr/local/mlst
      -e CI=true
      -e DEBUG='cgps:params,cgps:debug,cgps:test'
      -e RUN_CORE_GENOME_MLST
      $CI_REGISTRY_IMAGE:mlst-test
        bash -c "tar x &&
          RUN_CORE_GENOME_MLST=no node --max_old_space_size=4096 ./node_modules/.bin/ava --serial tests/quickMlst.js &&
          RUN_CORE_GENOME_MLST=yes node --max_old_space_size=4096 ./node_modules/.bin/ava --serial tests/quickMlst.js"

index all schemes:
  stage: index
  image: node:10
  only:
    variables:
      - $RUN_CORE_GENOME_MLST == "yes" || $RUN_CORE_GENOME_MLST == "no"
  except:
    variables:
      - $SCHEME
  artifacts:
    paths:
    - index_dir/
    expire_in: 2 days
  script:
    - rm -r index_dir && echo "Delete old index" || echo "No old index"
    - find . -type d
    - if [ "$RUN_CORE_GENOME_MLST" = "yes" ]; then INDEX_PARAMS="--type=cgmlst --max-sequences 50"; else INDEX_PARAMS="--type=mlst"; fi
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
    - ./bin/pull_database.sh cgps-typing-databases
    - yarn install
    - DEBUG='cgps:info' npm run index -- $INDEX_PARAMS --index=index_dir --database=cgps-typing-databases

test schemes:
  stage: test
  image: docker:latest
  only:
    variables:
      - $RUN_CORE_GENOME_MLST == "yes" || $RUN_CORE_GENOME_MLST == "no"
  except:
    variables:
      - $SCHEME
  script:
    - find . -type d
    - docker build
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --target test_build
      -t "$CI_REGISTRY_IMAGE:mlst-test" .
    - tar c *.json *.js src tests index_dir | docker run -i --rm
      -v /usr/local/mlst/node_modules
      -v $(pwd):/usr/local/mlst
      -w /usr/local/mlst
      -e CI=true
      -e DEBUG='cgps:params,cgps:debug,cgps:test'
      -e RUN_CORE_GENOME_MLST
      $CI_REGISTRY_IMAGE:mlst-test
        bash -c "tar x && npm run test"

deploy schemes:
  stage: deploy
  image: docker:latest
  only:
    variables:
      - $RUN_CORE_GENOME_MLST == "yes" || $RUN_CORE_GENOME_MLST == "no"
  except:
    variables:
      - $SCHEME
  script:
    - find . -type d
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - DATABASE_UPDATED=$(cat index_dir/updated.txt)
    - if [[ -z "${CI_COMMIT_TAG:-}" ]]; then TAG="${DATABASE_UPDATED}-${CI_COMMIT_SHA::8}"; else TAG="${DATABASE_UPDATED}-${CI_COMMIT_TAG}"; fi
    - if [ "$RUN_CORE_GENOME_MLST" = "yes" ]; then IMAGE="$CI_REGISTRY_IMAGE:cgmlst-$TAG"; else IMAGE="$CI_REGISTRY_IMAGE:mlst-$TAG"; fi
    - docker build
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --build-arg RUN_CORE_GENOME_MLST
      --label "git-ref=${CI_COMMIT_REF_NAME},git-commit=${CI_COMMIT_SHA},gitlab-job-id=${CI_JOB_ID},database-updated=${DATABASE_UPDATED}"
      --target prod_build
      -t "$IMAGE" .
    - docker push "$IMAGE"

index some schemes:
  stage: index
  image: node:10
  only:
    variables:
      - $INDEX_PARAMS
  artifacts:
    paths:
    - index_dir/
    expire_in: 2 days
  script:
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
    - ./bin/pull_database.sh cgps-typing-databases
    - yarn install
    - DEBUG='cgps:info' npm run index -- $INDEX_PARAMS --index=index_dir --database=cgps-typing-databases

deploy some schemes:
  stage: deploy
  image: docker:latest
  only:
    variables:
      - $SCHEME_NAME
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - DATABASE_UPDATED=$(cat index_dir/updated.txt)
    - if [[ -z "${CI_COMMIT_TAG:-}" ]]; then TAG="${DATABASE_UPDATED}-${CI_COMMIT_SHA::8}"; else TAG="${DATABASE_UPDATED}-${CI_COMMIT_TAG}"; fi
    - docker build
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      $BUILD_PARAMS
      --label "git-ref=${CI_COMMIT_REF_NAME},git-commit=${CI_COMMIT_SHA},gitlab-job-id=${CI_JOB_ID},database-updated=${DATABASE_UPDATED}"
      -t "$CI_REGISTRY_IMAGE:${SCHEME_NAME}-$TAG" .
      --target prod_build
    - docker push "$CI_REGISTRY_IMAGE:${SCHEME_NAME}-$TAG"
