image: docker:latest

stages:
- update_cache
- download
- deploy

update_cache:
  image: node:8
  stage: update_cache
  cache:
    key: node
    paths:
    - node_modules/
  variables:
    ftp_proxy: $https_proxy
  script:
  - id
  - ls -ld /mnt/cache/cgps-mlst
  - ls -l /mnt/cache/cgps-mlst
  - touch /mnt/cache/cgps-mlst/test-delete-me
  - if [ ! -d /mnt/cache/cgps-mlst/ ]; then echo "Cache directory is missing"; exit 1; fi
  - mkdir -p /opt
  - ln -s $(pwd)/data /opt/mlst
  - rm -r node_modules || true
  - find . -type f | grep -v '.git\|tests' | xargs -n 10 ls -l
  - yarn install
  # - DEBUG="*,-trace:curl,-trace:SlowDownloader:queued" npm run download
  - DEBUG="*,-trace:curl,-trace:SlowDownloader:queued" RUN_CORE_GENOME_MLST="yes" npm run download
  - rm data/cache/tmp || true
  - completed=$(date "+%Y%m%d%H%M%S")
  - echo -n "$completed" > data/cache/updated.txt
  - tar -zcf /mnt/cache/cgps-mlst/${completed}.tgz data/cache
  - ln -sfn /mnt/cache/cgps-mlst/${completed}.tgz /mnt/cache/cgps-mlst/latest.tgz
  only:
  - web
  artifacts:
    paths:
    - data/cache/
    expire_in: 60 minutes

download_mlst:
  image: node:8
  stage: download
  cache:
    key: node
    paths:
    - node_modules/
  variables:
    ftp_proxy: $https_proxy
  script:
  - mkdir -p /opt
  - ln -s $(pwd)/data /opt/mlst
  - yarn install
  - if [[ -f /mnt/cache/cgps-mlst/latest.tgz ]]; then tar -xzf /mnt/cache/cgps-mlst/latest.tgz; fi
  - if [[ -f data/cache/updated.txt ]]; then echo "[$(date)] Using cache from $(cat data/cache/updated.txt)"; else "[$(date)] No cache"; fi
  - DEBUG="*,-trace:curl,-trace:SlowDownloader:queued" npm run download
  only:
  - tags
  artifacts:
    paths:
    - data/cache/
    expire_in: 60 minutes

download_cgmlst:
  image: node:8
  stage: download
  cache:
    key: node
    paths:
    - node_modules/
  variables:
    ftp_proxy: $https_proxy
    RUN_CORE_GENOME_MLST: "yes"
  script:
  - mkdir -p /opt
  - ln -s $(pwd)/data /opt/mlst
  - yarn install
  - if [[ -f /mnt/cache/cgps-mlst/latest.tgz ]]; then tar -xzf /mnt/cache/cgps-mlst/latest.tgz; fi
  - if [[ -f data/cache/updated.txt ]]; then echo "[$(date)] Using cache from $(cat data/cache/updated.txt)"; else "[$(date)] No cache"; fi
  - DEBUG="*" npm run download
  only:
  - tags
  artifacts:
    paths:
    - data/cache/
    expire_in: 60 minutes

deploy_mlst:
  stage: deploy
  script:
  - docker pull ubuntu:latest
  - docker pull node:8
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - if [[ -f data/cache/updated.txt ]]; then CACHE_DATE=$(cat data/cache/updated.txt); else echo "[$(date)] Missing cache date"; exit 1; fi
  - if [[ -z "${CI_COMMIT_TAG:-}" ]]; then TAG="${CACHE_DATE}-${CI_COMMIT_SHA::8}"; else TAG="${CACHE_DATE}-${CI_COMMIT_TAG}"; fi
  - echo "docker tag will be $TAG"
  - docker build
    --build-arg http_proxy=$http_proxy
    --build-arg https_proxy=$https_proxy
    --build-arg ftp_proxy=$https_proxy
    --label "git-ref=${CI_COMMIT_REF_NAME},git-commit=${CI_COMMIT_SHA},gitlab-job-id=${CI_JOB_ID},download-cache-date=${CACHE_DATE}"
    -t "$CI_REGISTRY_IMAGE:mlst-$TAG" .
  - docker push "$CI_REGISTRY_IMAGE:mlst-$TAG"
  - echo "Pushed $CI_REGISTRY_IMAGE:mlst-$TAG"
  only:
  - tags
  - web

deploy_cgmlst:
  stage: deploy
  script:
  - docker pull ubuntu:latest
  - docker pull node:8
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - if [[ -f data/cache/updated.txt ]]; then CACHE_DATE=$(cat data/cache/updated.txt); else echo "[$(date)] Missing cache date"; exit 1; fi
  - if [[ -z "${CI_COMMIT_TAG:-}" ]]; then TAG="${CACHE_DATE}-${CI_COMMIT_SHA::8}"; else TAG="${CACHE_DATE}-${CI_COMMIT_TAG}"; fi
  - echo "docker tag will be $TAG"
  - docker build
    --build-arg http_proxy=$http_proxy
    --build-arg https_proxy=$https_proxy
    --build-arg ftp_proxy=$https_proxy
    --build-arg RUN_CORE_GENOME_MLST=yes
    --label "git-ref=${CI_COMMIT_REF_NAME},git-commit=${CI_COMMIT_SHA},gitlab-job-id=${CI_JOB_ID},download-cache-date=${CACHE_DATE}"
    -t "$CI_REGISTRY_IMAGE:cgmlst-$TAG" .
  - docker push "$CI_REGISTRY_IMAGE:cgmlst-$TAG"
  - echo "Pushed $CI_REGISTRY_IMAGE:cgmlst-$TAG"
  only:
  - tags
  - web
