image: docker:latest

download:
  stage: build
  cache:
    key: data
    untracked: true
    paths:
    - data/
    - node_modules/
  script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - docker run --rm
    -v $(cd data && pwd):/opt/mlst
    -v $(pwd):/usr/local/mlst
    -w /usr/local/mlst
    -e ENTEROBASE_API_KEY="$ENTEROBASE_API_KEY"
    -e DEBUG='*,-follow-redirects'
    -e http_proxy=$http_proxy
    -e https_proxy=$https_proxy
    -e ftp_proxy=$https_proxy
    node:8 npm install && npm run download
  only:
  - tags

fresh_download:
  stage: build
  cache:
    key: data
    untracked: true
    paths:
    - data/
    - node_modules/
  script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - rm data/ || true
  - mkdir data/
  - docker run --rm
    -v $(cd data && pwd):/opt/mlst
    -v $(pwd):/usr/local/mlst
    -w /usr/local/mlst
    -e ENTEROBASE_API_KEY="$ENTEROBASE_API_KEY"
    -e DEBUG='*,-follow-redirects'
    -e http_proxy=$http_proxy
    -e https_proxy=$https_proxy
    -e ftp_proxy=$https_proxy
    node:8 npm install && npm run download
  only:
  - schedules

deploy:
  stage: deploy
  cache:
    key: data
    untracked: true
    paths:
    - data/
  script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - docker build
    --pull
    --build-arg http_proxy=$http_proxy
    --build-arg https_proxy=$https_proxy
    --build-arg ftp_proxy=$https_proxy
    -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
  - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
  - tags
  - schedules
